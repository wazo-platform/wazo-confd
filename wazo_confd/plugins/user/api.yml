paths:
  /users:
    get:
      operationId: list_user
      summary: List users
      description: '**Required ACL:** `confd.users.read`'
      tags:
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      - $ref: '#/parameters/view'
      - $ref: '#/parameters/query_string_uuid_filter'
      responses:
        '200':
          description: User list
          schema:
            $ref: '#/definitions/UserItems'
    post:
      operationId: create_user
      summary: Create user
      description: '**Required ACL:** `confd.users.create`'
      tags:
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - name: body
        in: body
        description: User to create
        required: true
        schema:
          $ref: '#/definitions/UserPost'
      responses:
        '201':
          description: User created
          schema:
            $ref: '#/definitions/UserPostResponse'
        '400':
          $ref: '#/responses/CreateError'
  /users/{user_id}:
    head:
      operationId: head_user
      summary: Check if user exists
      description: '**Required ACL:** `confd.users.{user_id}.read`'
      tags:
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: User exists
        '404':
          description: User does not exist
    get:
      operationId: get_user
      summary: Get user
      description: '**Required ACL:** `confd.users.{user_id}.read`'
      tags:
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: User
          schema:
            $ref: '#/definitions/User'
        '404':
          $ref: '#/responses/NotFoundError'
    put:
      operationId: update_user
      summary: Update user
      description: '**Required ACL:** `confd.users.{user_id}.update`


        If the firstname or the lastname is modified, the name of associated voicemail
        is also updated.'
      tags:
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
    delete:
      operationId: delete_user
      summary: Delete user
      description: '**Required ACL:** `confd.users.{user_id}.delete`


        A user can not be deleted if he is associated to a line or a voicemail. Any
        line or voicemail attached to the user must be dissociated first. The user
        will also be removed from all queues, groups or other Wazo entities whom he
        is member.


        **Disclaimer**: if `recursive=true`, the user is deleted, all their
        associations with any related resources are removed, and some resources
        (lines, extensions, incalls and auth user) are deleted too.'
      tags:
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - required: false
        type: boolean
        name: recursive
        in: query
        description: Indicates if the resources related to the user must be deleted too.
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
  /users/{user_id}/forwards:
    get:
      operationId: list_user_forwards
      summary: List forwards for a user
      description: '**Required ACL:** `confd.users.{user_id}.forwards.read`'
      tags:
      - forwards
      - users
      parameters:
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: User-Forwards
          schema:
            $ref: '#/definitions/UserForwards'
    put:
      operationId: update_user_forwards
      summary: Update all forwards for a user
      description: '**Required ACL:** `confd.users.{user_id}.forwards.update`'
      tags:
      - forwards
      - users
      parameters:
      - $ref: '#/parameters/useriduuid'
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserForwards'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
  /users/{user_id}/forwards/{forward_name}:
    get:
      operationId: get_user_forward
      summary: Get forward for a user
      description: '**Required ACL:** `confd.users.{user_id}.forwards.{forward_name}.read`'
      tags:
      - forwards
      - users
      parameters:
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/forward'
      responses:
        '200':
          description: User-Forward
          schema:
            $ref: '#/definitions/UserForward'
    put:
      operationId: update_user_forward
      summary: Update a forward for a user
      description: '**Required ACL:** `confd.users.{user_id}.forwards.{forward_name}.update`'
      tags:
      - forwards
      - users
      parameters:
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/forward'
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserForward'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
  /users/{user_id}/services:
    get:
      operationId: get_user_services
      summary: Get status of all user's services
      description: '**Required ACL:** `confd.users.{user_id}.services.read`'
      tags:
      - users
      parameters:
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: User-Services
          schema:
            $ref: '#/definitions/UserServices'
        '404':
          $ref: '#/responses/NotFoundError'
    put:
      operationId: update_user_services
      summary: Update all services for a user
      description: '**Required ACL:** `confd.users.{user_id}.services.update`'
      tags:
      - users
      parameters:
      - $ref: '#/parameters/useriduuid'
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserServices'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
  /users/{user_id}/services/{service_name}:
    get:
      operationId: get_user_service
      summary: Get status of service
      description: '**Required ACL:** `confd.users.{user_id}.services.{service}.read`'
      tags:
      - users
      parameters:
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/service'
      responses:
        '200':
          description: User-Service
          schema:
            $ref: '#/definitions/UserService'
        '404':
          $ref: '#/responses/NotFoundError'
    put:
      operationId: update_user_service
      summary: Enable/Disable service for a user
      description: '**Required ACL:** `confd.users.{user_id}.services.{service}.update`'
      tags:
      - users
      parameters:
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/service'
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserService'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'

parameters:
  forward:
    required: true
    type: string
    enum:
    - busy
    - noanswer
    - unconditional
    name: forward_name
    in: path
    description: the forward name
  service:
    required: true
    type: string
    enum:
    - dnd
    - incallfilter
    name: service_name
    in: path
    description: the service name
  useriduuid:
    required: true
    type: string
    name: user_id
    in: path
    description: the user's ID or UUID

definitions:
  UserCreate:
    title: User Create
    allOf:
    - $ref: '#/definitions/BaseUser'
    - $ref: '#/definitions/UserRelationVoicemailCreate'
    - $ref: '#/definitions/UserRelationAgent'
    - $ref: '#/definitions/UserRelationFallbacks'
    - $ref: '#/definitions/UserRelationForwards'
    - $ref: '#/definitions/UserRelationGroups'
    - $ref: '#/definitions/UserRelationIncalls'
    - $ref: '#/definitions/UserRelationLines'
    - $ref: '#/definitions/UserRelationServices'
    - $ref: '#/definitions/UserRelationSwitchboards'
    - $ref: '#/definitions/UserRelationQueues'
    - $ref: '#/definitions/UserRelationCallPickupTargets'

  UserRelationVoicemailCreate:
    properties:
      voicemail:
        allOf:
          - $ref: '#/definitions/BaseVoicemail'
          - properties:
              id:
                type: integer
                description: The voicemail is associated if the ID is specified

  BaseUser:
    title: User
    allOf:
    - $ref: '#/definitions/UserRelationBase'
    - properties:
        id:
          type: integer
          description: User ID
          readOnly: true
        email:
          type: string
          description: User's email. Used for directories (i.e. by wazo-dird)
        timezone:
          type: string
          description: User timezone
        language:
          type: string
          enum:
          - de_DE
          - en_US
          - es_ES
          - fr_FR
          - fr_CA
          - it_IT
          - nl_NL
          description: User language (e.g. "en_US")
        country:
          type: string
          description: User country, for localization purposes
          readOnly: true
        description:
          type: string
          description: Additional information about the user
        call_transfer_enabled:
          type: boolean
          default: false
          description: Authorize call transfers
        dtmf_hangup_enabled:
          type: boolean
          default: false
          description: Authorize to hangup with DTMF
        call_record_enabled:
          type: boolean
          default: false
          description: Record all calls made by this user (deprecated). If set, all `call_record_*_enabled` will be affected
        call_record_outgoing_external_enabled:
          type: boolean
          default: false
          description: Record all external calls made by this user
        call_record_incoming_external_enabled:
          type: boolean
          default: false
          description: "Record all external calls received by this user."
        call_record_outgoing_internal_enabled:
          type: boolean
          default: false
          description: Record all internal calls received by this user
        call_record_incoming_internal_enabled:
          type: boolean
          default: false
          description: "Record all internal calls received by this user."
        online_call_record_enabled:
          type: boolean
          default: false
          description: Allow user to record a call by pressing *3
        caller_id:
          type: string
          description: Name that appears on the phone when calling. Formatted as "Firstname
            Lastname" < number >
        outgoing_caller_id:
          type: string
          enum:
          - default
          - anonymous
          - '"Firstname Lastname" < number >'
          description: Name that appears on the phone when calling
        mobile_phone_number:
          type: string
          description: Phone number for the user’s mobile device
        username:
          type: string
          description: Username for connecting to the CTI (deprecated)
        password:
          type: string
          minLength: 4
          description: Password for connecting to the CTI (deprecated)
        music_on_hold:
          type: string
          description: Name of the MOH category to use for music on hold
        ring_seconds:
          type: integer
          default: 30
          description: Number of seconds a user's phone will ring before falling back
        simultaneous_calls:
          type: integer
          default: 5
          description: Number of allowed simultaneous calls on a user's phone
        subscription_type:
          type: integer
          description: The subscription type of the user (0-10)
          minimum: 0
          maximum: 10
        supervision_enabled:
          type: boolean
          default: true
          description: Activate presence sharing in the xivo client
        preprocess_subroutine:
          type: string
          description: Name of the subroutine to execute in asterisk before receiving
            a call
        userfield:
          type: string
          description: A custom field which purpose is left to the client. If the user
            has no userfield, then this field is an empty string.
        call_permission_password:
          type: string
          description: Overwrite all passwords set in call permissions associated to
            the user
        enabled:
          type: boolean
          default: true
          description: Enable/Disable the user
        tenant_uuid:
          type: string
          description: The UUID of the tenant
          readOnly: true

  User:
    title: User
    allOf:
    - $ref: '#/definitions/BaseUser'
    - $ref: '#/definitions/UserRelationAgent'
    - $ref: '#/definitions/UserRelationFallbacks'
    - $ref: '#/definitions/UserRelationForwards'
    - $ref: '#/definitions/UserRelationGroups'
    - $ref: '#/definitions/UserRelationIncalls'
    - $ref: '#/definitions/UserRelationLines'
    - $ref: '#/definitions/UserRelationServices'
    - $ref: '#/definitions/UserRelationSwitchboards'
    - $ref: '#/definitions/UserRelationVoicemail'
    - $ref: '#/definitions/UserRelationQueues'
    - $ref: '#/definitions/UserRelationCallPickupTargets'
    - required:
      - firstname
  UserRelationBase:
    properties:
      uuid:
        type: string
        description: User UUID. This ID is globally unique across multiple Wazo instances
        readOnly: true
      firstname:
        type: string
        description: User firstname
      lastname:
        type: string
        description: User lastname
  UserRelationGroups:
    properties:
      groups:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/GroupRelationBase'
  UserRelationIncalls:
    properties:
      incalls:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/UserRelationIncall'
  UserRelationIncall:
    allOf:
      - $ref: '#/definitions/IncallRelationBase'
      - $ref: '#/definitions/IncallRelationExtensions'
  UserRelationLines:
    properties:
      lines:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/UserRelationLine'
  UserRelationLine:
    allOf:
      - $ref: '#/definitions/LineRelationBase'
      - $ref: '#/definitions/LineRelationEndpoints'
      - $ref: '#/definitions/LineRelationExtensions'
  UserRelationFallbacks:
    properties:
      fallbacks:
        readOnly: true
        $ref: '#/definitions/UserFallbacks'
  UserRelationForwards:
    properties:
      forwards:
        readOnly: true
        $ref: '#/definitions/UserForwards'
  UserRelationServices:
    properties:
      services:
        readOnly: true
        $ref: '#/definitions/UserServices'
  UserRelationSwitchboards:
    properties:
      switchboards:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/SwitchboardRelationBase'
  UserRelationVoicemail:
    properties:
      voicemail:
        readOnly: true
        $ref: '#/definitions/VoicemailRelationBase'
  UserRelationQueues:
    properties:
      queues:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/QueueRelationBase'
  UserRelationAgent:
    properties:
      agent:
        readOnly: true
        $ref: '#/definitions/AgentRelationBase'
  AgentRelationBase:
    properties:
      id:
        type: integer
        readOnly: True
      number:
        type: string
  UserRelationCallPickupTargets:
    title: UserRelationCallPickupTargets
    properties:
      call_pickup_target_users:
        type: array
        items:
          $ref: '#/definitions/UserRelationBase'
  UserService:
    title: UserService
    properties:
      enabled:
        type: boolean
    required:
    - enabled
  UserServices:
    title: UserServices
    properties:
      dnd:
        $ref: '#/definitions/UserService'
      incallfilter:
        $ref: '#/definitions/UserService'
  UserForward:
    title: UserForward
    properties:
      enabled:
        type: boolean
      destination:
        type: string
  UserForwards:
    title: UserForwards
    properties:
      busy:
        $ref: '#/definitions/UserForward'
      noanswer:
        $ref: '#/definitions/UserForward'
      unconditional:
        $ref: '#/definitions/UserForward'
  UserItems:
    title: UserItems
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/User'
      total:
        type: integer
    required:
    - total
  UserPost:
    title: User
    properties:
      id:
        type: integer
        description: User ID
        readOnly: true
      uuid:
        type: string
        description: User UUID. This ID is globally unique across multiple Wazo instances
        readOnly: true
      firstname:
        type: string
        description: User firstname
      lastname:
        type: string
        description: User lastname
      email:
        type: string
        description: User's email. Used for directories (i.e. by wazo-dird)
      timezone:
        type: string
        description: User timezone
      language:
        type: string
        enum:
        - de_DE
        - en_US
        - es_ES
        - fr_FR
        - fr_CA
        - it_IT
        - nl_NL
        description: User language (e.g. "en_US")
      description:
        type: string
        description: Additional information about the user
      call_transfer_enabled:
        type: boolean
        default: false
        description: Authorize call transfers
      dtmf_hangup_enabled:
        type: boolean
        default: false
        description: Authorize to hangup with DTMF
      call_record_enabled:
        type: boolean
        default: false
        description: Record all calls made by this user (deprecated). If set, all `call_record_*_enabled` will be affected
      call_record_outgoing_external_enabled:
        type: boolean
        default: false
        description: Record all external calls made by this user
      call_record_incoming_external_enabled:
        type: boolean
        default: false
        description: "Record all external calls received by this user."
      call_record_outgoing_internal_enabled:
        type: boolean
        default: false
        description: Record all internal calls received by this user
      call_record_incoming_internal_enabled:
        type: boolean
        default: false
        description: "Record all internal calls received by this user."
      online_call_record_enabled:
        type: boolean
        default: false
        description: Allow user to record a call by pressing *3
      caller_id:
        type: string
        description: Name that appears on the phone when calling. Formatted as "Firstname
          Lastname" < number >
      outgoing_caller_id:
        type: string
        enum:
        - default
        - anonymous
        - '"Firstname Lastname" < number >'
        description: Name that appears on the phone when calling
      mobile_phone_number:
        type: string
        description: Phone number for the user’s mobile device
      username:
        type: string
        description: Username for connecting to the CTI (deprecated)
      password:
        type: string
        minLength: 4
        description: Password for connecting to the CTI (deprecated)
      music_on_hold:
        type: string
        description: Name of the MOH category to use for music on hold
      ring_seconds:
        type: integer
        default: 30
        description: Number of seconds a user's phone will ring before falling back
      simultaneous_calls:
        type: integer
        default: 5
        description: Number of allowed simultaneous calls on a user's phone
      subscription_type:
        type: integer
        description: The subscription type of the user (0-10)
        minimum: 0
        maximum: 10
      supervision_enabled:
        type: boolean
        default: true
        description: Activate presence sharing in the xivo client
      preprocess_subroutine:
        type: string
        description: Name of the subroutine to execute in asterisk before receiving
          a call
      userfield:
        type: string
        description: A custom field which purpose is left to the client. If the user
          has no userfield, then this field is an empty string.
      call_permission_password:
        type: string
        description: Overwrite all passwords set in call permissions associated to
          the user
      enabled:
        type: boolean
        default: true
        description: Enable/Disable the user
      tenant_uuid:
        type: string
        description: The UUID of the tenant
        readOnly: true
      lines:
        type: array
        items:
          $ref: '#/definitions/UserPostRelationLine'
      groups:
        type: array
        items:
          type: object
          description: One identifier(id or uuid) must be provided
          properties:
            uuid:
              type: string
            id:
              type: integer
      switchboards:
        type: array
        items:
          type: object
          properties:
            uuid:
              type: string
      voicemail:
        $ref: '#/definitions/Voicemail'
        description: The body of a new voicemail or a body containing an existing voicemail ID that should be associated to the user.
      auth:
        type: object
        properties:
          uuid:
            type: string
            description: "The user's UUID"
            readOnly: true
          username:
            type: string
            description: The username that will identify that new username
          password:
            type: string
            description: The password of the newly created username
          firstname:
            type: string
            description: "The user's firstname"
          lastname:
            type: string
            description: "The user's lastname"
          enabled:
            type: boolean
          email_address:
            type: string
            description: The main email address of the new username
          purpose:
            type: string
            default: user
            enum:
              - user
              - internal
              - external_api
      forwards:
        $ref: '#/definitions/UserForwards'
        description: The forwards related to the user
      fallbacks:
        $ref: '#/definitions/UserFallbacks'
        description: The fallbacks related to the user
      agent:
        description: The agent related to the user
        $ref: '#/definitions/UserRelationAgent'
    allOf:
    - $ref: '#/definitions/UserPostRelationIncalls'
  UserPostResponse:
    title: UserCreateResponse
    allOf:
      - $ref: '#/definitions/UserPost'
      - $ref: '#/definitions/AuthUserPost'
      - $ref: '#/definitions/UserPostRelationIncalls'
  AuthUserPost:
    properties:
      auth:
        type: object
        properties:
          username:
            type: string
          emails:
            type: array
            items:
              type: object
              properties:
                address:
                  type: string
                main:
                  type: boolean
                confirmed:
                  type: boolean
          uuid:
            type: string
          purpose:
            type: string
            enum:
              - user
              - internal
              - external_api
  UserPostRelationIncalls:
    properties:
      incalls:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
              description: The id of the incoming call
            preprocess_subroutine:
              type: string
              description: Name of the subroutine to execute in asterisk before receiving
                a call
            caller_id_mode:
              type: string
              enum:
              - prepend
              - overwrite
              - append
              description: How the caller_id_name will be treated
            caller_id_name:
              type: string
              description: Name to display when calling
            greeting_sound:
              type: string
              description: The name of the sound file to be played before redirecting the caller to the destination
            extensions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    description: Extension ID
                    readOnly: true
                  context:
                    type: string
                  exten:
                    type: string
  UserPostRelationLine:
    properties:
      device_id:
        type: string
        description: ID of the device associated to the line
    allOf:
      - $ref: '#/definitions/Line'
      - $ref: '#/definitions/LineExtensions'
      - $ref: '#/definitions/LineEndpointSIP'
      - $ref: '#/definitions/LineEndpointSCCP'
      - $ref: '#/definitions/LineEndpointCustom'
